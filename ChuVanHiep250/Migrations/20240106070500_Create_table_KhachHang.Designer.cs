// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChuVanHiep250.Migrations
{
    [DbContext(typeof(AppplicationDbContext))]
    [Migration("20240106070500_Create_table_KhachHang")]
    partial class Create_table_KhachHang
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ChuVanHiep250.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TenLapTop")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaKhachHang");

                    b.HasIndex("TenLapTop");

                    b.ToTable("Khach Hang");
                });

            modelBuilder.Entity("ChuVanHiep250.Models.LapTop", b =>
                {
                    b.Property<string>("TenLapTop")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GiaTien")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayMua")
                        .HasColumnType("TEXT");

                    b.HasKey("TenLapTop");

                    b.ToTable("LapTop");
                });

            modelBuilder.Entity("ChuVanHiep250.Models.KhachHang", b =>
                {
                    b.HasOne("ChuVanHiep250.Models.LapTop", "LapTop")
                        .WithMany()
                        .HasForeignKey("TenLapTop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LapTop");
                });
#pragma warning restore 612, 618
        }
    }
}
